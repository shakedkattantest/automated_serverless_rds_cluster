version: 2.1

setup: true

orbs:
  sam: circleci/aws-sam-serverless@6.1.0
  aws-cli: circleci/aws-cli@4.0.0
  terraform: circleci/terraform@3.2.1

jobs:
  bootstrap:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - aws-cli/install
      - run:
          name: Install Python Dependencies
          command: pip install boto3 PyGithub
      - run:
          name: Run bootstrap script if SAM stack not deployed
          command: |
            if aws cloudformation describe-stacks --stack-name rds-automation-stack --region "$AWS_REGION" > /dev/null 2>&1; then
              echo "SAM stack already exists – skipping bootstrap."
            else
              echo "SAM stack not found – running bootstrap..."
              python .circleci/bootstrap.py
            fi

            
  deploy-serverless:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - aws-cli/install
      - sam/install
      - run:
          name: Conditionally Deploy Serverless Stack with SAM
          command: |
             MERGE_MSG=$(git log -1 --pretty=%B)
              if [[ "$MERGE_MSG" == Merge\ pull\ request* ]]; then
                echo "PR Merge detected – skipping SAM deploy."
              else
                echo "Regular push – running SAM deploy..."
                sam build
                sam deploy --stack-name rds-automation-stack \
                           --capabilities CAPABILITY_NAMED_IAM \
                           --region $AWS_REGION \
                           --resolve-s3 \
                           --no-confirm-changeset \
                           --no-fail-on-empty-changeset
              fi


  apply-terraform:
    executor:
      name: terraform/default
      tag: "1.5.7"
    steps:
      - checkout
      - run:
          name: Terraform Apply on PR Merged Path
          command: |
            MERGE_MSG=$(git log -1 --pretty=%B)
            if [[ "$MERGE_MSG" == Merge\ pull\ request* ]]; then
              echo "PR merge detected – running Terraform apply..."
              echo "Recent commits:"
              git log --oneline -n 3 || true

              echo "Detecting changed env:"
              TARGET_PATH=$(git diff --name-only HEAD^ HEAD | grep '^terraform/env/' | head -n1 | sed -E 's|(terraform/env/[^/]+).*|\1|')

              if [ -z "$TARGET_PATH" ]; then
                echo "No env path found. Skipping Terraform apply."
                exit 0
              fi

              echo "TARGET_PATH=$TARGET_PATH"
              cd "$TARGET_PATH"

              echo "Running terraform init..."
              terraform init -input=false

              echo "Validating config..."
              terraform validate

              echo "Planning changes..."
              terraform plan -input=false -out=tfplan

              echo "Plan output:"
              terraform show tfplan

              echo "Applying changes..."
              terraform apply -input=false -auto-approve tfplan

              else
              echo "Not a PR merge – skipping Terraform apply."
            fi
            
workflows:
  version: 2
  serverless-rds-provision:
    jobs:
      - bootstrap:
          filters:
            branches:
              only: main
      - deploy-serverless:
          requires:
            - bootstrap
          filters:
            branches:
              only: main
      - apply-terraform:
          filters:
            branches:
              only: main
